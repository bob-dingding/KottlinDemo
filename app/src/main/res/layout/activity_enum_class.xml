<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout
        xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:tools="http://schemas.android.com/tools"
        xmlns:app="http://schemas.android.com/apk/res-auto"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".classandobject.EnumClassActivity">

    <TextView
            android:text="枚举类的最基本的用法是实现类型安全的枚举：每个枚举常量都是一个对象。枚举常量用逗号分隔
\nenum class Direction {
\n    NORTH, SOUTH, WEST, EAST
\n}
"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/textView15"
            app:layout_constraintTop_toTopOf="parent" app:layout_constraintEnd_toEndOf="parent"
            android:layout_marginEnd="8dp" app:layout_constraintStart_toStartOf="parent"
            android:layout_marginStart="8dp" android:layout_marginTop="48dp"
            app:layout_constraintHorizontal_bias="0.47"/>
    <TextView
            android:text="
            枚举常量还可以声明其带有相应方法以及覆盖了基类方法的匿名类
\n如果枚举类定义任何成员，那么使用分号将成员定义中的枚举常量定义分隔开
\nenum class ProtocolState {
\n    abstract fun signal(): ProtocolState
\n    WAITING {
\n        override fun signal() = TALKING
\n    },
\n
\n    TALKING {
\n        override fun signal() = WAITING
\n    };
\n
\n}"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/textView16"
            app:layout_constraintTop_toBottomOf="@+id/textView15" android:layout_marginTop="52dp"
            app:layout_constraintStart_toStartOf="parent" android:layout_marginStart="8dp"
            app:layout_constraintEnd_toEndOf="parent" android:layout_marginEnd="8dp"/>
    <ImageView
            android:layout_width="383dp"
            android:layout_height="200dp" app:srcCompat="@mipmap/enum_two"
            android:id="@+id/imageView8" android:layout_marginTop="8dp"
            app:layout_constraintTop_toBottomOf="@+id/textView16" app:layout_constraintStart_toStartOf="parent"
            android:layout_marginStart="8dp"/>
</android.support.constraint.ConstraintLayout>