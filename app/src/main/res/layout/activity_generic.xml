<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout
        xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:tools="http://schemas.android.com/tools"
        xmlns:app="http://schemas.android.com/apk/res-auto"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".classandobject.GenericActivity">

    <ScrollView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintRight_toRightOf="parent"
            app:layout_constraintLeft_toLeftOf="parent">
        <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:orientation="vertical">
            <TextView
                    android:text="泛型，即“参数化类型”。一提到参数，最熟悉的就是定义方法时有形参，然后调用此方法时传递实参。那么参数化类型怎么理解呢？

\n顾名思义，就是将类型由原来的具体的类型参数化，类似于方法中的变量参数，此时类型也定义成参数形式（可以称之为类型形参），
然后在使用/调用时传入具体的类型（类型实参）。
\n泛型的本质是为了参数化类型（在不创建新的类型的情况下，通过泛型指定的不同类型来控制形参具体限制的类型）。也就是说在泛型使用过程中，
\n操作的数据类型被指定为一个参数，这种参数类型可以用在类、接口和方法中，分别被称为泛型类、泛型接口、泛型方法。"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:id="@+id/textView11" app:layout_constraintStart_toStartOf="parent"
                    android:layout_marginStart="8dp" app:layout_constraintEnd_toEndOf="parent"
                    android:layout_marginEnd="8dp"
                    app:layout_constraintTop_toTopOf="parent"/>
            <TextView android:layout_width="wrap_content"
                      android:layout_height="wrap_content"
                      android:layout_marginTop="20dp"
                      android:text="Java利用有限制通配符来提升API的灵活性,首先Java中的泛型是不型变的,这意味着String类型的List并不是集合Objec类型的子类型.为什么这样?如果List不是不型变的,它就没比Java的数组好到哪去,因为如下代码会通过编译然后导致运行时异常"
            />
            <ImageView android:layout_width="wrap_content"
                       android:layout_height="wrap_content"
                       android:src="@mipmap/generate_one"/>

        </LinearLayout>

    </ScrollView>


</android.support.constraint.ConstraintLayout>