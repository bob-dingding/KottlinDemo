<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout
        xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:tools="http://schemas.android.com/tools"
        xmlns:app="http://schemas.android.com/apk/res-auto"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".classandobject.InnerClassActivity">

    <TextView
            android:text="内部类：标记为 inner 的嵌套类能够访问其外部类的成员。内部类会带有一个对外部类的对象的引用：
\nclass Outer {
 \n   private val bar: Int = 1
 \n   inner class Inner {
 \n       fun foo() = bar
 \n   }
\n}

val demo = Outer().Inner().foo() // == 1"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/textView12"
            app:layout_constraintStart_toStartOf="parent"
            android:layout_marginStart="8dp"
            app:layout_constraintEnd_toEndOf="parent"
            android:layout_marginEnd="8dp"
            app:layout_constraintTop_toTopOf="parent"
    />


    <TextView
            android:text="内部匿名类的定义:
\n，所谓的匿名内部类就是一个没有显式的名字的内部类,本质：匿名内部类会隐式的继承一个类或者实现一个接口，或者说，匿名内部类是一个继承了该类或者实现了该接口的子类匿名对象"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/textView14"
            app:layout_constraintStart_toStartOf="parent"
            android:layout_marginStart="8dp"
            app:layout_constraintEnd_toEndOf="parent"
            android:layout_marginEnd="8dp" app:layout_constraintTop_toBottomOf="@+id/textView12"
            android:layout_marginTop="76dp" app:layout_constraintHorizontal_bias="0.498"/>


    <TextView
            android:text="匿名内部类:使用对象表达式创建匿名内部类实例,凡是有值的都是表达式,表达式是操作符、操作数和标点符号组成的序列，其目的是用来说明…个计算过程,表达式可以嵌套，例如：2+3+(5*sizeof(int))/345。表达式后面加一个分号就构成了表达式语句"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/textView13"
            app:layout_constraintStart_toStartOf="parent"
            android:layout_marginStart="8dp" app:layout_constraintEnd_toEndOf="parent" android:layout_marginEnd="8dp"
            app:layout_constraintHorizontal_bias="0.494" app:layout_constraintTop_toBottomOf="@+id/textView14"
            android:layout_marginTop="40dp"/>
    <ImageView
            android:src="@mipmap/inner_one"
            android:layout_width="379dp"
            android:layout_height="192dp"
            android:id="@+id/imageView7" app:layout_constraintStart_toStartOf="parent"
            android:layout_marginStart="8dp" android:layout_marginTop="8dp"
            app:layout_constraintTop_toBottomOf="@+id/textView13"/>


</android.support.constraint.ConstraintLayout>