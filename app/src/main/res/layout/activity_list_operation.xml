<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout
         xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:app="http://schemas.android.com/apk/res-auto"
        xmlns:tools="http://schemas.android.com/tools"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".list.ListOperationActivity">

    <ScrollView
            android:layout_width="match_parent"
            android:layout_height="match_parent">

        <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:orientation="vertical">

            <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="List 的特点是能通过索引访问特定元素，因此读取元素的最简单方法是按索引检索它。如果 List 长度小于指定的索引，则抛出异常。 另外，还有两个函数能避免此类异常：
\ngetOrElse() 提供用于计算默认值的函数，如果集合中不存在索引，则返回默认值
\ngetOrNull() 返回 null 作为默认值。" />

            <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="20dp"
                    android:text="List 还提供 subList() 该函数将指定元素范围的视图作为列表返回。" />

            <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="在任何列表中，都可以使用indexOf()和lastIndexOf()函数找到元素的位置。它们返回元素的第一个和最后一个位置，该位置等于列表中的给定参数。如果不存在这样的元素，两个函数都返回-1。
\nindexOfFirst()返回与谓词匹配的第一个元素的索引，如果没有这样的元素，则返回-1。
\nindexOfLast()返回与谓词匹配的最后一个元素的索引，如果没有这样的元素，则返回-1。" />

            <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="在有序列表中进行二分查找是通过binarySearch().如果有对应的元素就返回其下标，如果没有就返回(-insertionPoint - 1)，其中insertionPoint是应该插入此元素的索引" />
       <ImageView
               android:layout_width="wrap_content"
               android:layout_height="wrap_content"
               android:layout_marginTop="20dp"
               android:src="@mipmap/list_binarysearch"/>
            <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="List集合的添加和删除修改操作我们就简单说一下：添加就是add()和addAll()函数，一个是添加单个元素，一个是添加整个集合
\n删除主要是removeAt()删除指定下标的元素
\n更新主要是list[index]替换给定位置的元素,还有一个fill()可以用指定的值替换所有集合元素"/>

            <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="20dp"
                    android:text="集合的排序相关操作，详情查看代码"/>
        <ImageView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="20dp"
            android:src="@mipmap/list_aboutopration"/>

        </LinearLayout>
    </ScrollView>

</android.support.constraint.ConstraintLayout>