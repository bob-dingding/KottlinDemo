<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout
        xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:tools="http://schemas.android.com/tools"
        xmlns:app="http://schemas.android.com/apk/res-auto"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".classandobject.SealClassActivity">

    <TextView
            android:text="密封类用来表示受限的类继承结构：当一个值为有限几种的类型、而不能有任何其他类型时。在某种意义上，他们是枚举类的扩展：枚举类型的值集合也是受限的，但每个枚举常量只存在一个实例，而密封类的一个子类可以有可包含状态的多个实例。
\n 要声明一个密封类，需要在类名前面添加 sealed 修饰符。虽然密封类也可以有子类，但是所有子类都必须在与密封类自身相同的文件中声明
\n一个密封类是自身抽象的，它不能直接实例化并可以有抽象（abstract）成员
\n密封类不允许有非-private 构造函数（其构造函数默认为 private）
\n请注意，扩展密封类子类的类（间接继承者）可以放在任何位置，而无需在同一个文件中。"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/textView9" app:layout_constraintStart_toStartOf="parent" android:layout_marginStart="8dp"
            app:layout_constraintEnd_toEndOf="parent" android:layout_marginEnd="8dp"
            app:layout_constraintTop_toTopOf="parent"/>
    <ImageView
            android:layout_width="426dp"
            android:layout_height="359dp"
            app:srcCompat="@mipmap/realclass"
            android:id="@+id/imageView6"
            android:layout_marginTop="8dp"
            app:layout_constraintTop_toBottomOf="@+id/textView9"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"/>
    <TextView
            android:text="使用密封类的关键好处在于使用 when 表达式 的时候，如果能够验证语句覆盖了所有情况，就不需要为该语句再添加一个 else 子句了。当然，这只有当你用 when 作为表达式（使用结果）而不是作为语句时才有用"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:id="@+id/textView10" android:layout_marginTop="20dp"
            app:layout_constraintTop_toBottomOf="@+id/imageView6" app:layout_constraintStart_toStartOf="parent"
            android:layout_marginStart="8dp" app:layout_constraintEnd_toEndOf="parent" android:layout_marginEnd="8dp"/>


</android.support.constraint.ConstraintLayout>